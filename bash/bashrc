#!/usr/bin/env bash

# bash
HISTCONTROL=ignoreboth  # Ignore duplicate commands, or ones prefixed with a space
HISTSIZE=65535 # Keep lots of history. Default, 500

# editor
if type vim >/dev/null 2>&1; then EDITOR=vim; fi
if type nvim >/dev/null 2>&1; then EDITOR=nvim; fi
export EDITOR

# homebrew autocomplete
if type brew 2&>/dev/null; then
    for completion_file in "$(brew --prefix)"/etc/bash_completion.d/*; do
        # shellcheck source=/dev/null
        source "$completion_file"
    done

    # node-version-manager
    if [ -d "$(brew --prefix nvm)" ]; then
        export NVM_DIR="$HOME/.nvm"

        nvmsh="/usr/local/opt/nvm/nvm.sh"
        if [ -s "$nvmsh" ]; then
            # shellcheck source=/dev/null
            source "$nvmsh"
        fi
        unset nvmsh

        bashCompletion="/usr/local/opt/nvm/etc/bash_completion"
        if [ -s "$bashCompletion" ]; then
            # shellcheck source=/dev/null
            source "$bashCompletion"
        fi
        unset bashCompletion

        # shellcheck source=/dev/null
        source "$(brew --prefix nvm)/nvm.sh"
    fi
fi

PROMPT_COMMAND=__prompt_command

__prompt_command() {
    # Record the last exit first, otherwise another binary call would overwrite it.
    local EXIT="$?"

    # Reset the PS1 entry to a blank string to manipulate.
    PS1=""

    # Options for __git_ps1, a shell prompt distributed with git.
    # https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh

    # shellcheck disable=SC2034
    GIT_PS1_SHOWDIRTYSTATE=true

    # shellcheck disable=SC2034
    GIT_PS1_SHOWUPSTREAM="auto"

    # shellcheck disable=SC2034
    GIT_PS1_SHOWCOLORHINTS=true

    # Define some color.
    local red='\[\e[0;31m\]'
    local gre='\[\e[0;32m\]'
    local yel='\[\e[0;33m\]'
    local blu='\[\e[0;34m\]'
    local bblu='\[\e[1;34m\]'
    local bpur='\[\e[1;35m\]'
    local pur='\[\e[0;35m\]'
    local cya='\[\e[0;36m\]';
    local rcol='\[\e[0m\]'      # reset the color

    local last_exit_color=''
    local last_exit_character=''
    if [ "$EXIT" != 0 ]; then
        last_exit_color="${red}"
        last_exit_character='X'
    else
        last_exit_color="${gre}"
        last_exit_character='O'
    fi

    PS1+="\n"
    PS1+="${last_exit_color}${last_exit_character}${rcol} "

    # user@host
    PS1+="${blu}\u${rcol}${bblu}@\h${rcol} "

    # Current AWS Account
    if [ -n "${AWS_PROFILE:=}" ]; then
        PS1+="${cya}☁${AWS_PROFILE}${rcol} "
    fi

    # Current directory
    PS1+="${yel}\w${rcol}"

    if [ "$EXIT" != 0 ]; then
        # Add the exit code when not zero.
        PS1+=" ${last_exit_color}[${EXIT}]${rcol}"
    fi

    if type __git_ps1 > /dev/null 2>&1; then
	# Adds __git_ps1 to prompt.
	PS1+="$(__git_ps1)"
    fi

    PS1+="\n${pur}\A${rcol}${bpur}>${rcol} "
}

# ripgrep, Makes $HOME/.ripgreprc the default configuration.
if [ -f "$HOME/.ripgreprc" ]; then
    # RIPGREP_CONFIG_PATH is required for ripgrep to respect the config.
    export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
fi

# ~/.local/bin, for user binaries. Part of the XDG Base Directory specification.
if [ -d "$HOME/.local/bin" ] && [[ ! "$PATH" == *$HOME/.local/bin* ]]; then
    export PATH="$PATH:$HOME/.local/bin"
fi

fzfShellDir="/usr/share/doc/fzf/examples" # Default on Ubuntu 20.04
if type brew 2&>/dev/null; then
    fzfShellDir="$(brew --prefix)/opt/fzf/shell"

    if [[ ! "$PATH" == *"$(brew --prefix)"/opt/fzf/bin* ]]; then
        # Append fzf/bin to the PATH since homebrew does not.
        PATH="$PATH:$(brew --prefix)/opt/fzf/bin"
        export PATH
    fi
fi

if [ -d "$fzfShellDir" ]; then
    if [[ $- == *i* ]]; then
        # shellcheck source=/dev/null
        source "$fzfShellDir/completion.bash" 2> /dev/null
    fi

    # shellcheck source=/dev/null
    source "$fzfShellDir/key-bindings.bash"
fi
unset fzfShellDir

# .bashrc.local, to override any settings from this .bashrc file.
if [ -f "$HOME/.bashrc.local" ]; then
    # shellcheck source=/dev/null
    source "$HOME/.bashrc.local"
fi

# Install volta and don't modify the ~/.bashrc (--skip-setup)
#     curl https://get.volta.sh | bash -s -- --skip-setup
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"
