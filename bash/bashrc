#!/usr/bin/env bash

# bash
HISTCONTROL=ignoreboth  # Ignore duplicate commands, or ones prefixed with a space
HISTSIZE=65535 # Keep lots of history. Default, 500

# golang
export GOPATH=$HOME/go
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

# Set editor to nvim
export EDITOR=nvim

# Hook for desk activation
[ -n "$DESK_ENV" ] && source "$DESK_ENV" || true

# homebrew autocomplete
if type brew 2&>/dev/null; then
    for completion_file in $(brew --prefix)/etc/bash_completion.d/*; do
        source "$completion_file"
    done

    # node-version-manager
    if [ -d "$(brew --prefix nvm)" ]; then
        export NVM_DIR="$HOME/.nvm"
        [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
        [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion
        source "$(brew --prefix nvm)/nvm.sh"
    fi
fi

if [ type __git_ps1 > /dev/null 2>&1 ]; then
    echo "WARN: Looks like __git_ps1 isn't available for the prompt. Should be included with git."
fi

PROMPT_COMMAND=__prompt_command

__prompt_command() {
    # Record the last exit first, otherwise another binary call would overwrite it.
    local EXIT="$?"

    # Reset the PS1 entry to a blank string to manipulate.
    PS1=""

    # Sets options for git's built-in __git_ps1 script.
    GIT_PS1_SHOWDIRTYSTATE=true
    GIT_PS1_SHOWUPSTREAM=true
    GIT_PS1_SHOWCOLORHINTS=1

    # Define some color.
    local Red='\[\e[0;31m\]'
    local Gre='\[\e[0;32m\]'
    local Yel='\[\e[0;33m\]'
    local Blu='\[\e[0;34m\]'
    local BBlu='\[\e[1;34m\]'
    local BPur='\[\e[1;35m\]'
    local Pur='\[\e[0;35m\]'
    local Cya='\[\e[0;36m\]';
    local RCol='\[\e[0m\]'      # Reset the color

    local last_exit_color=''
    local last_exit_character=''
    if [ $EXIT != 0 ]; then
        last_exit_color="${Red}"
        last_exit_character='X'
    else
        last_exit_color="${Gre}"
        last_exit_character='O'
    fi
    PS1+="\n"
    PS1+="${last_exit_color}${last_exit_character}${RCol} "

    # user@host
    PS1+="${Blu}\u${RCol}${BBlu}@\h${RCol} "

    # Current AWS Account
    if [ ! -z "${AWS_PROFILE}" ]; then
        PS1+="${Cya}☁${AWS_PROFILE}${RCol} "
    fi

    # Currently enabled desk
    if [ ! -z "${DESK_NAME}" ]; then
        PS1+="░${DESK_NAME} "
    fi

    # Current directory
    PS1+="${Yel}\w${RCol}"

    if [ $EXIT != 0 ]; then
        # Add the exit code when not zero.
        PS1+=" ${last_exit_color}[${EXIT}]${RCol}"
    fi

    if type __git_ps1 > /dev/null 2>&1; then
	# Adds __git_ps1 to prompt.
	PS1+="$(__git_ps1)"
    fi

    PS1+="\n${Pur}\A${RCol}${BPur}>${RCol} "
}

# ripgrep - Setup $HOME/.ripgreprc configuration. This configuraiton
# should act as the default configuration.
if [ -f "$HOME/.ripgreprc" ]; then
    # RIPGREP_CONFIG_PATH is required for ripgrep to respect the config.
    export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"
fi

# fzf - Fuzzy Finder for Bash
# NOTE: fzf contains an install script that sets up these functions and
# similar paths. The script may have updated functionallity since run on
# 2019/01/31 on a MacOS machine for bash.
# fzf - Setup pathing
# ---------
if [[ ! "$PATH" == */usr/local/opt/fzf/bin* ]]; then
    export PATH="$PATH:/usr/local/opt/fzf/bin"
fi

if [ -d "$HOME/.local/bin" ] && [[ ! "$PATH" == *$HOME/.local/bin* ]]; then
    export PATH="$PATH:$HOME/.local/bin"
fi

# fzf - Auto-completion
# fzf - Key bindings
# ---------------
if [ -d /usr/local/opt/fzf/shell ]; then
    [[ $- == *i* ]] && source "/usr/local/opt/fzf/shell/completion.bash" 2> /dev/null
source "/usr/local/opt/fzf/shell/key-bindings.bash"
fi

# .bashrc.local support, for local-only bash commands
if [ -f "$HOME/.bashrc.local" ]; then
    source $HOME/.bashrc.local
fi

